@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div>
    <div class="text-center mt-4">
        <h1 class="display-4">Welcome</h1>
        <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
    </div>

    <div class="d-flex flex-row justify-content-center">
        <div class="mt-4 col-8">
            <div class="d-flex flex-row flex-wrap justify-content-center align-items-center pt-4">
                <button type="submit" id="logVerbose" class="btn btn-outline-dark m-2">Log Verbose</button>
                <button type="submit" id="LogDebug" class="btn btn-secondary m-2">Log Debug</button>
                <button type="submit" id="logInformational" class="btn btn btn-info m-2">Log Informational</button>
                <button type="submit" id="logApiInformational" class="btn btn btn-info m-2">Log API Informational</button>
                <button type="submit" id="logWarning" class="btn btn-warning m-2">Log Warning</button>
                <button type="submit" id="logError" class="btn btn-danger m-2">Log Error</button>
                <button type="submit" id="logFatal" class="btn btn-danger m-2">Log Fatal</button>
                <button type="submit" id="logInfoWithContext" class="btn btn-info m-2">Log Info With Context</button>
                <button type="submit" id="logExceptionWithContext" class="btn btn-danger m-2">Log Exception With Context</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById("logVerbose").addEventListener("click", function () {

        SendRequest('POST', '/Log/Verbose');
    });

    document.getElementById("LogDebug").addEventListener("click", function () {

        SendRequest('POST', '/Log/Debug');
    });

    document.getElementById("logInformational").addEventListener("click", function () {

        SendRequest('POST', '/Log/Informational');
    });

    document.getElementById("logApiInformational").addEventListener("click", function () {

        SendRequest('POST', '/api/LogApi/LogInformational');
    });

    document.getElementById("logWarning").addEventListener("click", function () {

        SendRequest('POST', '/Log/Warning');
    });

    document.getElementById("logError").addEventListener("click", function () {

        SendRequest('POST', '/Log/Error');
    });

    document.getElementById("logFatal").addEventListener("click", function () {

        SendRequest('POST', '/Log/Fatal');
    });

    document.getElementById("logInfoWithContext").addEventListener("click", function () {

        SendRequest('POST', '/Log/InformationalWithContext');
    });

    document.getElementById("logExceptionWithContext").addEventListener("click", function () {

        SendRequest('POST', '/Log/ExceptionWithContext');
    });

    function SendRequest(method, URL) {
        var xhr = new XMLHttpRequest();
        xhr.open(method, URL, true);
        xhr.setRequestHeader("X-Correlation-Id", uuidv4());

        // Handle the response
        xhr.onload = function () {
            if (xhr.status === 200) {
                // Success response (e.g., update the UI)
                alert("Data submitted successfully: " + xhr.status + " " + xhr.responseText);
            } else {
                // Error handling
                alert("Error: " + xhr.status + " " + xhr.statusText);
            }
        };

        xhr.send();
    }

    function uuidv4() {
        return "10000000-1000-4000-8000-100000000000".replace(/[018]/g, c =>
            (+c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> +c / 4).toString(16)
        );
    }
</script>